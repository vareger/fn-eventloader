buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.0.RELEASE")
        classpath 'com.bmuschko:gradle-docker-plugin:4.0.4'
    }
}

plugins {
    id 'java'
    id 'net.ltgt.apt' version '0.10'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.bmuschko.docker-remote-api'
apply plugin: 'com.bmuschko.docker-spring-boot-application'

group = 'ethereum'
version = '1.0.12'

description = "EventLoader for Ethereum blockchain"

sourceCompatibility = 1.8
targetCompatibility = 1.8

bootJar {
    manifest {
        attributes 'Start-Class': 'ethereum.eventloader.Application'
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven { url "http://repo.maven.apache.org/maven2" }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    implementation {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

dependencies {
    implementation group: 'commons-lang', name: 'commons-lang', version: '2.6'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter', version: '2.1.0.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.1.0.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.1.0.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: '2.1.0.RELEASE'

    implementation group: 'org.apache.curator', name: 'curator-framework', version: '4.1.0'
    implementation group: 'org.apache.curator', name: 'curator-recipes', version: '4.1.0'
    implementation group: 'org.apache.zookeeper', name: 'zookeeper', version: '3.4.13'
    implementation group: 'org.springframework.kafka', name: 'spring-kafka'

    implementation group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.1.0'

    /* Web3j */
    implementation group: 'org.web3j', name: 'core', version: '4.6.1'

    /* Lombok */
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.6'
    annotationProcessor 'org.projectlombok:lombok:1.18.6'

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.0.4.RELEASE'
    testCompile group: 'org.springframework', name: 'spring-test', version: '5.0.7.RELEASE'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    testCompile group: 'org.apache.curator', name: 'curator-test', version: '4.0.1'
    testCompile group: 'org.springframework.kafka', name: 'spring-kafka-test'
}

docker {
    springBootApplication {
        baseImage = 'java:8-jre'
        ports = [8080]
        tag = 'vareger/event-loader:1.0.11'
    }
    registryCredentials {
        /*
            properties: 'dockerUser', 'dockerPassword', 'dockerEmail' need to be set as gradle properties
         */
        username = dockerUser
        password = dockerPassword
        email = dockerEmail
    }
}
