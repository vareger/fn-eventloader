spring:
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_URL}
    producer:
      value-serializer: 'org.springframework.kafka.support.serializer.JsonSerializer'
      retries: 5
      acks: 'all'
    consumer:
      value-deserializer: 'org.springframework.kafka.support.serializer.JsonDeserializer'
      group-id: ${GROUP_ID}
    client-id: ${CLIENT_ID}
event-loader:
  topics:
    blocks: ${TOPIC_BLOCK}
    events:
      - event: '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef'
        topic: ${TOPIC_TRANSFER}
        name: 'Transfer'
      - event: '*'
        topic: ${TOPIC_ALL}
        name: "All"
ethereum:
  client-address: ${NODE_URL}
  batch-size: ${BLOCK_BATCH_SIZE:10}
  start-block: ${START_BLOCK:3540052}
  block-lag: ${BLOCK_LAG:12}
zookeeper:
  namespace: ${ZOOKEEPER_NAMESPACE}
  connect-string: ${ZOOKEEPER_URL}
  connection-timeout: 3000
  session-timeout: 10000
management:
  metrics:
    export:
      prometheus:
        enabled: true
  endpoint:
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"